'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.createErrorAPI = createErrorAPI;

var _functions = require('../utils/functions');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var methods = ['doPushwooshApiMethod', 'registerDevice', 'unregisterDevice', 'applicationOpen', 'setTags', 'getTags', 'pushStat'];

function createErrorAPI(error) {
  return methods.reduce(function (api, methodName) {
    api[methodName] = function () {
      return Promise.reject(error);
    }; // eslint-disable-line no-param-reassign
    return api;
  }, {});
}

var PushwooshAPI = function () {
  function PushwooshAPI(params) {
    _classCallCheck(this, PushwooshAPI);

    this.doPushwooshApiMethod = params.doPushwooshApiMethod;
    this.applicationCode = params.applicationCode;
    this.hwid = params.hwid;
    this.pushToken = params.pushToken;
    this.publicKey = params.publicKey;
    this.authToken = params.authToken;
    this.language = params.language;
  }

  PushwooshAPI.prototype.callAPI = function callAPI(methodName, methodParams) {
    return this.doPushwooshApiMethod(methodName, _extends({}, methodParams, {
      application: this.applicationCode,
      hwid: this.hwid
    }));
  };

  PushwooshAPI.prototype.registerDevice = function registerDevice() {
    return this.callAPI('registerDevice', {
      push_token: this.pushToken,
      public_key: this.publicKey,
      auth_token: this.authToken,
      language: this.language || 'en',
      timezone: -new Date().getTimezoneOffset() * 60,
      device_model: (0, _functions.getBrowserVersion)(),
      device_name: (0, _functions.getDeviceName)(),
      device_type: (0, _functions.getBrowserType)()
    });
  };

  PushwooshAPI.prototype.unregisterDevice = function unregisterDevice() {
    return this.callAPI('unregisterDevice');
  };

  PushwooshAPI.prototype.applicationOpen = function applicationOpen() {
    return this.callAPI('applicationOpen', {
      push_token: this.pushToken,
      timezone: -new Date().getTimezoneOffset() * 60,
      device_type: (0, _functions.getBrowserType)()
    });
  };

  PushwooshAPI.prototype.setTags = function setTags(tags) {
    return this.callAPI('setTags', { tags: tags });
  };

  PushwooshAPI.prototype.getTags = function getTags() {
    return this.callAPI('getTags');
  };

  PushwooshAPI.prototype.pushStat = function pushStat(hash) {
    return this.callAPI('pushStat', { hash: hash });
  };

  PushwooshAPI.create = function create(subscription, applicationCode, doPushwooshApiMethod, language) {
    var pushToken = (0, _functions.getPushToken)(subscription);

    return new PushwooshAPI({
      doPushwooshApiMethod: doPushwooshApiMethod,
      applicationCode: applicationCode,
      hwid: (0, _functions.generateHwid)(applicationCode, pushToken),
      pushToken: pushToken,
      publicKey: (0, _functions.getPublicKey)(subscription),
      authToken: (0, _functions.getAuthToken)(subscription),
      language: language
    });
  };

  return PushwooshAPI;
}();

exports.default = PushwooshAPI;