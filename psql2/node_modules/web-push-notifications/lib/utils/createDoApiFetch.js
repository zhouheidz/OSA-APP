'use strict';

exports.__esModule = true;
exports.default = createDoApiFetch;

var _PushwooshError = require('../classes/PushwooshError'),
    _PushwooshError2 = _interopRequireDefault(_PushwooshError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createDoApiFetch(pushwooshUrl, logger) {
  return function doApiFetch(methodName, request) {
    logger.debug('Performing ' + methodName + ' call to Pushwoosh with arguments: ' + JSON.stringify(request));
    var url = pushwooshUrl + methodName,
        params = { request: request };


    return fetch(url, {
      method: 'post',
      headers: {
        'Content-Type': 'text/plain;charset=UTF-8'
      },
      body: JSON.stringify(params)
    }).then(function (response) {
      if (!response.ok) {
        var logText = new _PushwooshError2.default(response.statusText || 'response not ok');
        logger.error(logText);
        throw logText;
      }
      return response.json().then(function (json) {
        if (json.status_code != 200) {
          // eslint-disable-line eqeqeq
          var _logText = new _PushwooshError2.default('Error occurred during the ' + methodName + ' call to Pushwoosh: ' + json.status_message);
          logger.error(_logText);
          throw _logText;
        }
        return json.response;
      });
    });
  };
}